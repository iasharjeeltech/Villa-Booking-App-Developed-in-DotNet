@inject SignInManager<ApplicationUser> SignInManager;
@inject UserManager<ApplicationUser> UserManager;

@{
    var role = string.Empty;

    if(SignInManager.IsSignedIn(User)){
        var user = await UserManager.GetUserAsync(User);
        role = (await UserManager.GetRolesAsync(user!)).FirstOrDefault();
    }
    }


<ul class="navbar-nav ms-auto">

    @if(!SignInManager.IsSignedIn(User)){

        <li class="nav-item">
            <a class="nav-link btn btn-success fw-bolder" asp-action="Register" asp-controller="Account">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-linkbtn btn btn-danger fw-bolder" asp-action="Login" asp-controller="Account">LogIn</a>
        </li>


    }
    else{

        <li class="nav-item">
            <a class="nav-link fw-bolder"> @UserManager.GetUserName(User) (@role.ToUpper())</a>
        </li>
        <li class="nav-item">
            <a class="nav-link fw-bolder btn btn-danger" asp-action="Logout" asp-controller="Account">LogOut</a>
        </li>
    }

</ul>  